import base64
import json
import os
import uuid
from io import BytesIO

import requests
from aiogram import Bot, types
from dotenv import load_dotenv, find_dotenv
from requests.auth import HTTPBasicAuth

load_dotenv(find_dotenv())

CLIENT_ID = os.getenv('CLIENT_ID')
SECRET = os.getenv('SECRET')


def get_access_token() -> str:
    url = "https://ngw.devices.sberbank.ru:9443/api/v2/oauth"
    headers = {
        'Content-Type': 'application/x-www-form-urlencoded',
        'Accept': 'application/json',
        'RqUID': str(uuid.uuid4()),  # —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–ø—Ä–æ—Å–∞
    }
    payload = {"scope": "GIGACHAT_API_PERS"}

    try:
        res = requests.post(
            url=url,
            headers=headers,
            auth=HTTPBasicAuth(CLIENT_ID, SECRET),
            data=payload,
            verify=False,  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ verify=False –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–ª—è –≤–∞—à–µ–π —Å—Ä–µ–¥—ã
        )
        res.raise_for_status()  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
        access_token = res.json().get("access_token")
        if not access_token:
            raise ValueError("–¢–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞ –Ω–µ –±—ã–ª –ø–æ–ª—É—á–µ–Ω.")
        return access_token
    except requests.RequestException as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ access token:", e)
        return None



def send_prompt(msg: str, access_token: str):
    url = "https://gigachat.devices.sberbank.ru/api/v1/chat/completions"
    payload = json.dumps({
        "model": "GigaChat",
        "messages": [
            {
                "role": "user",
                "content": msg,
            }
        ],
    })
    headers = {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'Authorization': f'Bearer {access_token}'
    }

    try:
        response = requests.post(url, headers=headers, data=payload, verify=False)
        response.raise_for_status()  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–æ–∫
        return response.json()["choices"][0]["message"]["content"]
    except requests.RequestException as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ GigaChat API:", e)
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç GigaChat."


def sent_prompt_and_get_response(msg: str):
    access_token = get_access_token()

    message = (
        f"‚ú®üåà –ü—Ä–∏–¥—É–º–∞–π –Ω–µ–æ–±—ã—á–Ω—É—é –∏ —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å–∫–∞–∑–∫—É –æ {msg} üßö‚Äç‚ôÄÔ∏èü¶Ñ! "
        f"–ü—É—Å—Ç—å —ç—Ç–æ –±—É–¥–µ—Ç –∏—Å—Ç–æ—Ä–∏—è, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ü–∞—Ä—Å—Ç–≤–∞ –ø—Ä–µ–≤—Ä–∞—â–∞—é—Ç—Å—è –≤ –Ω–µ—á—Ç–æ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ, –∞ –≥–µ—Ä–æ–∏ —Å—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è —Å –Ω–µ–æ–±—ã—á–Ω—ã–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏ –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è–º–∏ üåüüåå. "
        f"–ù–∞–ø–æ–ª–Ω–∏ –µ—ë —á—É–¥–µ—Å–∞–º–∏, —Å–º–∞–π–ª–∏–∫–∞–º–∏ –∏ –≤–æ–ª—à–µ–±–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ —è—Ä–∫–æ–π –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–µ–π—Å—è! üòçüé≠. "
        f"–£–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç–µ–∫—Å—Ç –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 3000 —Å–∏–º–≤–æ–ª–æ–≤, –≤–∫–ª—é—á–∞—è –ø—Ä–æ–±–µ–ª—ã –∏ —Å–º–∞–π–ª–∏–∫–∏. –ü–æ—Å—Ç–∞—Ä–∞–π—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–≥–∏—á–Ω–æ—Å—Ç—å —Å—é–∂–µ—Ç–∞ –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å."
    )

    if access_token:
        response = send_prompt(message, access_token)
        decorated_response = f'‚ú®üåü {response} üåàüßö‚Äç‚ôÇÔ∏è'
        return decorated_response
    else:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å access token."


def sent_prompt_and_get_response_2(msg: str):
    access_token = get_access_token()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ò–ò —Å —É—á—ë—Ç–æ–º –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ —Å—Ç—É–¥–∏–∏
    message = (
        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å: '{msg}'\n\n"
        "–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—à–µ–π —Å—Ç—É–¥–∏–∏ WebMinds Studio. "
        "–£ –Ω–∞—Å –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —É—Å–ª—É–≥–∏:\n"
        "1. üåê –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–æ–≤ ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Å–∞–π—Ç–æ–≤ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞.\n"
        "2. ü§ñ –°–æ–∑–¥–∞–Ω–∏–µ Telegram-–±–æ—Ç–æ–≤ ‚Äî —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —É–¥–æ–±–Ω—ã—Ö –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã—Ö –±–æ—Ç–æ–≤.\n"
        "3. üîç SEO-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è ‚Äî –ø–æ–≤—ã—à–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å–∞–π—Ç–∞ –≤ –ø–æ–∏—Å–∫–æ–≤—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö.\n"
        "4. ‚öôÔ∏è –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è ‚Äî —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—à–µ–Ω–∏–π –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á.\n"
        "5. üìà –í–Ω–µ–¥—Ä–µ–Ω–∏–µ CRM-—Å–∏—Å—Ç–µ–º ‚Äî –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è CRM –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤.\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å, –∏—Å–ø–æ–ª—å–∑—É—è —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∏ –¥–æ–±–∞–≤—å—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ."
    )

    if access_token:
        response = send_prompt(message, access_token)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ –ò–ò
        decorated_response = f'‚ú®üåü {response} üåàüßö‚Äç‚ôÇÔ∏è'  # –£–∫—Ä–∞—à–∞–µ–º –æ—Ç–≤–µ—Ç
        return decorated_response
    else:
        return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å access token."
