import asyncio
import os

from aiogram import F, Router, types, Bot
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from gtts import gTTS

from filter.chat_types import ChatTypeFilter
from handlers.ai_function import sent_prompt_and_get_response_2, sent_prompt_and_get_response_3
from keyboard.inline import start_functions_keyboard, get_cancel_keyboard, return_menu_functions_keyboard

create_music_private_router = Router()
create_music_private_router.message.filter(ChatTypeFilter(['private']))


class AiAssistanceState2(StatesGroup):
    WaitingForTheme = State()


@create_music_private_router.callback_query(F.data.startswith("create_music"))
async def create_music_callback_query(query: types.CallbackQuery, state: FSMContext) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º—É–∑—ã–∫–∏. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–º—É, –∞ –±–æ—Ç –ø—Ä–∏–¥—É–º—ã–≤–∞–µ—Ç –º—É–∑—ã–∫—É.
    """
    await state.clear()
    m = await query.message.edit_caption(
        caption=(
            "üéµ –ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–¥—É–º–∞—Ç—å –º—É–∑—ã–∫—É –¥–ª—è –≤–∞—à–µ–π —Ç–µ–º—ã!\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤–¥–æ—Ö–Ω–æ–≤–∏—Ç –Ω–∞—Å. –ù–∞–ø—Ä–∏–º–µ—Ä:\n"
            "‚Äî –õ—é–±–æ–≤—å –∏ –¥–æ–∂–¥—å üåßÔ∏è‚ù§Ô∏è\n"
            "‚Äî –í–µ—Ç–µ—Ä –∏ –ø—É—Å—Ç—ã–Ω—è üå¨Ô∏èüèúÔ∏è\n"
            "‚Äî –†–æ–∫ –∏ –∞–¥—Ä–µ–Ω–∞–ª–∏–Ω üé∏‚ö°"
        ),
        reply_markup=get_cancel_keyboard()
    )
    await state.update_data(message_id=m.message_id)
    await state.set_state(AiAssistanceState2.WaitingForTheme)
    await query.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É —Ç–µ–º—É, —á—Ç–æ–±—ã –º—ã –ø—Ä–∏–¥—É–º–∞–ª–∏ –º—É–∑—ã–∫—É!")


@create_music_private_router.message(AiAssistanceState2.WaitingForTheme)
async def process_create_music(message: types.Message, state: FSMContext, bot: Bot):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–º—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º—É–∑—ã–∫–∏.
    """
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_info = message.from_user.first_name or ""
    if message.from_user.last_name:
        user_info += f" {message.from_user.last_name}"
    if message.from_user.username:
        user_info += f" (@{message.from_user.username})"

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–∫—Å—Ç
    if message.text:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
        processing_message = await message.answer(
            f"–ó–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç, {user_info}!\nüí≠ –ï—â—ë —á—É—Ç—å-—á—É—Ç—å, –≥–æ—Ç–æ–≤–ª—é –æ—Ç–≤–µ—Ç..."
        )

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ò–ò
        generated_help = sent_prompt_and_get_response_3(message.text)

        # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
        keyboard = InlineKeyboardBuilder()
        keyboard.add(InlineKeyboardButton(text="üîä –ü–æ—Å–ª—É—à–∞—Ç—å ", callback_data='listen_music'))
        keyboard.add(InlineKeyboardButton(text="‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="return"))

        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        await bot.edit_message_text(
            chat_id=processing_message.chat.id,
            message_id=processing_message.message_id,
            text=generated_help,
            reply_markup=keyboard.adjust(1,).as_markup(),
        )

        user_data = await state.get_data()
        message_id = user_data.get("message_id")
        if message_id:
            try:
                await bot.delete_message(chat_id=message.chat.id, message_id=message_id)
            except Exception as e:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: {e}")

        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.clear()

    else:
        await message.delete()
        m = await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—É—é —Ç–µ–º—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º—É–∑—ã–∫–∏!")
        await asyncio.sleep(5)
        await m.delete()


@create_music_private_router.callback_query(F.data.startswith("listen_music"))
async def listen_music(query: types.CallbackQuery, state: FSMContext) -> None:
    text = query.message.text
    user_id = query.from_user.id

    await query.message.edit_text(text, reply_markup=return_menu_functions_keyboard())

    wait_message = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –¥–æ —Ç—Ä—ë—Ö –º–∏–Ω—É—Ç. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –≥–æ–ª–æ—Å..."
    await query.message.answer(wait_message)
    tts = gTTS(text=text, lang='ru')

    file_path = f"{user_id}.mp3"
    tts.save(file_path)
    voice = types.FSInputFile(file_path)

    await query.message.answer_voice(voice)

    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    os.remove(file_path)
