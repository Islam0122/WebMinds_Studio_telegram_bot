from aiogram import F, Router, types, Bot
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import InlineKeyboardButton
from keyboard.inline import start_functions_keyboard, get_cancel_keyboard, return_menu_functions_keyboard, \
    feedback_functions_keyboard, feedback_buttons
from handlers.user_panel.start_functions import welcome_text
from filter.chat_types import ChatTypeFilter, IsAdmin

feedback_private_router = Router()
feedback_private_router.message.filter(ChatTypeFilter(['private']))


class FeedbackState(StatesGroup):
    WaitingForReview = State()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫
@feedback_private_router.callback_query(F.data.startswith("feedback"))
async def feedback_callback_query(query: types.CallbackQuery) -> None:
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard_markup = feedback_functions_keyboard()

    # –¢–µ–∫—Å—Ç –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å —ç–º–æ–¥–∑–∏
    caption_text = (
        "<b>üí¨ –û—Ç–∑—ã–≤—ã</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å:\n"
        "1. üìù –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤\n"
        "2. üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã\n\n"
        "<i>–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –Ω–∞–∂–º–∏—Ç–µ 'üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'</i>"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ —Ç–µ–∫—Å—Ç–æ–º
    await query.message.edit_caption(
        caption=caption_text,
        reply_markup=keyboard_markup
    )


comments = ({
               "comment_1": "<b>üíª WebMinds Studio —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–∞–π—Ç –¥–ª—è –Ω–∞—Å!</b>\n\n"
                            "<i>\"–ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å WebMinds Studio –Ω–∞–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ —Å–∞–π—Ç–∞. –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤, –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏, "
                            "–ø—Ä–µ–¥–ª–æ–∂–∏–ª–∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∏ —É–¥–æ–±–Ω—ã–π –¥–∏–∑–∞–π–Ω. –í—Å–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è –±—ã–ª–∏ —É—á—Ç–µ–Ω—ã, –∞ –ø—Ä–æ–µ–∫—Ç –¥–≤–∏–∂–µ—Ç—Å—è –ø–æ –ø–ª–∞–Ω—É. "
                            "–ú—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–µ–≤–∑–æ–π–¥–µ—Ç –≤—Å–µ –æ–∂–∏–¥–∞–Ω–∏—è!\"</i>\n\n"
                            "<b>‚Äî –ö–ª–∏–µ–Ω—Ç 1, –∫–æ–º–ø–∞–Ω–∏—è —Å–∫—Ä—ã—Ç–Ω–æ</b>",

               "comment_2": "<b>ü§ñ WebMinds Studio —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –±–æ—Ç–∞ –¥–ª—è –Ω–∞—Å!</b>\n\n"
                            "<i>\"–ú—ã –∑–∞–∫–∞–∑–∞–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É Telegram-–±–æ—Ç–∞ –¥–ª—è –Ω–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞. WebMinds Studio –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∞ —Ä–µ—à–µ–Ω–∏–µ, "
                            "–∫–æ—Ç–æ—Ä–æ–µ –∏–¥–µ–∞–ª—å–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞—à–∏–º –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º. –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑ —Å–±–æ–µ–≤. –ë–æ—Ç —Å—Ç–∞–ª –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º "
                            "–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã!\"</i>\n\n"
                            "<b>‚Äî –ö–ª–∏–µ–Ω—Ç 2, –∫–æ–º–ø–∞–Ω–∏—è —Å–∫—Ä—ã—Ç–Ω–æ</b>",

               "comment_3": "<b>üîß WebMinds Studio —Å–æ–∑–¥–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è —Å–∞–π—Ç–∞!</b>\n\n"
                            "<i>\"–ù–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å WebMinds Studio –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Å–∞–π—Ç–∞. –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –±—ã–ª–∏ "
                            "–≤–Ω–µ—Å–µ–Ω—ã –≤–æ–≤—Ä–µ–º—è, –∞ –Ω–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ–∫–∞–∑–∞–ª—Å—è –∏–º–µ–Ω–Ω–æ —Ç–µ–º, —á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ. –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞, –º—ã –æ—á–µ–Ω—å –¥–æ–≤–æ–ª—å–Ω—ã!\"</i>\n\n"
                            "<b>‚Äî –ö–ª–∏–µ–Ω—Ç 3, –∫–æ–º–ø–∞–Ω–∏—è —Å–∫—Ä—ã—Ç–Ω–æ</b>"
           })
@feedback_private_router.callback_query(F.data.startswith("view_review"))
async def view_review_callback_query(query: types.CallbackQuery) -> None:
    keyboard_markup = feedback_buttons()

    caption_text = (
        "<b>üí¨ –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–Ω–µ–Ω–∏–µ –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ –Ω–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö."
    )

    await query.message.edit_caption(
        caption=caption_text,
        reply_markup=keyboard_markup
    )


@feedback_private_router.callback_query(F.data.in_(comments.keys()))
async def show_selected_comment(query: types.CallbackQuery) -> None:
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    selected_comment = comments[query.data]

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await query.message.edit_caption(
        caption=selected_comment,
        reply_markup=return_menu_functions_keyboard()
    )

@feedback_private_router.callback_query(F.data.startswith("leave_review"))
async def send_review_request_callback_query(query: types.CallbackQuery, state: FSMContext) -> None:
    caption_text = (
        "<b>üí¨ –û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤</b>\n\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–ª–∏ –º–µ–¥–∏–∞.\n\n"
        "<i>–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∏—Ç—å'</i>"
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –æ—Ç–∑—ã–≤–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    message = await query.message.edit_caption(
        caption=caption_text,
        reply_markup=get_cancel_keyboard()
    )
    await state.set_state(FeedbackState.WaitingForReview)
    await state.update_data(request_message_id=message.message_id)


@feedback_private_router.callback_query(F.data == "cancel")
async def cancel_feedback(query: types.CallbackQuery, state: FSMContext) -> None:
    await state.clear()
    await query.answer("–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    await query.message.edit_caption(
        caption=welcome_text,
        reply_markup=start_functions_keyboard()
    )


@feedback_private_router.message(FeedbackState.WaitingForReview)
async def process_review(message: types.Message, state: FSMContext, bot: Bot):
    group_id = -4553757993  # ID –≥—Ä—É–ø–ø—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤

    # –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–ø—Ä–æ—Å–æ–º –æ—Ç–∑—ã–≤–∞ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    user_data = await state.get_data()
    request_message_id = user_data.get('request_message_id')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ –º–µ–¥–∏–∞
    if message.text:
        # –ï—Å–ª–∏ –æ—Ç–∑—ã–≤ –Ω–µ –ø—É—Å—Ç–æ–π, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
        user_info = f"{message.from_user.first_name}"
        if message.from_user.last_name:
            user_info += f" {message.from_user.last_name}"
        if message.from_user.username:
            user_info += f" (@{message.from_user.username})"

        review_text = message.text
        review_message = f"üí¨ –û—Ç–∑—ã–≤ –æ—Ç {user_info}:\n\n{review_text}"
        await state.clear()
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞ –≤ –≥—Ä—É–ø–ø—É
        await bot.send_message(chat_id=group_id, text=review_message)
        await message.answer("–í–∞—à –æ—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ!",reply_markup=return_menu_functions_keyboard())

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –æ—Ç–∑—ã–≤–∞ –∏–∑ –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞
        if request_message_id:
            try:
                await message.delete()
                await bot.delete_message(chat_id=message.chat.id, message_id=request_message_id)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    elif message.photo or message.video or message.audio:
        # –ï—Å–ª–∏ –º–µ–¥–∏–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ –∫–∞–∫ –æ—Ç–∑—ã–≤
        user_info = f"{message.from_user.first_name}"
        if message.from_user.last_name:
            user_info += f" {message.from_user.last_name}"
        if message.from_user.username:
            user_info += f" (@{message.from_user.username})"

        review_media_message = f"üí¨ –û—Ç–∑—ã–≤ –æ—Ç {user_info}:\n\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –º–µ–¥–∏–∞:"
        await bot.send_message(chat_id=group_id, text=review_media_message)

        if message.photo:
            await bot.send_photo(chat_id=group_id, photo=message.photo[-1].file_id)
        elif message.video:
            await bot.send_video(chat_id=group_id, video=message.video.file_id)
        elif message.audio:
            await bot.send_audio(chat_id=group_id, audio=message.audio.file_id)

        await message.answer("–í–∞—à –º–µ–¥–∏–∞-–æ—Ç–∑—ã–≤ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ!",reply_markup=return_menu_functions_keyboard())

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –æ—Ç–∑—ã–≤–∞ –∏–∑ –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞
        if request_message_id:
            try:
                await message.delete()
                await bot.delete_message(chat_id=message.chat.id, message_id=request_message_id)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    else:
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –∏–ª–∏ –º–µ–¥–∏–∞
        await message.delete()
        # –ü–æ–ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –º–µ–¥–∏–∞ –¥–ª—è –æ—Ç–∑—ã–≤–∞.")
